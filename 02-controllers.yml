---
- name: Ensure controllers
  hosts: localhost
  connection: local
  module_defaults:
    group/hetzner.hcloud.all:
      api_token: "{{ vault_hetzner_token }}"
  vars:
    controllers:
      - name: ctrl-1
      - name: ctrl-2
      - name: ctrl-3

  tasks:

    - name: Ensure LB
      hetzner.hcloud.load_balancer:
        name: Ingress-LB
        load_balancer_type: lb11
        algorithm: round_robin
        location: hel1
        state: present
      register: lb_result

    - name: Forward http ingress
      hetzner.hcloud.load_balancer_service:
        load_balancer: Ingress-LB
        protocol: http
        listen_port: 80
        state: present

    - name: Forward https ingress
      hetzner.hcloud.load_balancer_service:
        load_balancer: Ingress-LB
        protocol: tcp
        listen_port: 443
        destination_port: 443
        state: present

    - name: Forward api ingress
      hetzner.hcloud.load_balancer_service:
        load_balancer: Ingress-LB
        protocol: tcp
        listen_port: 6443
        destination_port: 6443
        state: present

    - name: Forward machine config ingress
      hetzner.hcloud.load_balancer_service:
        load_balancer: Ingress-LB
        protocol: tcp
        listen_port: 22623
        destination_port: 22623
        state: present

    - name: Add controllers to LB
      hetzner.hcloud.load_balancer_target:
        type: label_selector
        load_balancer: Ingress-LB
        label_selector: role=controller
        use_private_ip: false
        state: present

    - name: Create a placement group for controllers
      hetzner.hcloud.placement_group:
        name: controllers
        type: spread
        labels:
          role: controller
        state: present

    - name: Create controllers
      hetzner.hcloud.server:
        name: "{{ item.name }}"
        # server_type: cpx11
        server_type: cpx41
        datacenter: hel1-dc2
        image: centos-stream-10
        ssh_keys:
          - hetzner-admin
        enable_ipv4: true
        enable_ipv6: false
        placement_group: controllers
        labels:
          role: controller
        state: created
      loop: "{{ controllers }}"

    - name: Refresh inventory to get access to servers
      meta: refresh_inventory

    - name: Create a firewall for controllers
      # To do more fine grained FW, see guide at:
      # https://docs.redhat.com/en/documentation/openshift_container_platform/4.19/html/installation_configuration/configuring-firewall
      hetzner.hcloud.firewall:
        name: controller-firewall
        rules:
          - description: allow icmp from everywhere
            direction: in
            protocol: icmp
            source_ips:
              - 0.0.0.0/0
          - description: allow ssh
            direction: in
            protocol: tcp
            port: 22
            source_ips:
              - 0.0.0.0/0
          - description: allow api from LB
            direction: in
            protocol: tcp
            port: 6443
            source_ips:
              - "{{ lb_result.hcloud_load_balancer.ipv4_address }}/32"
          - description: allow ingress http from LB
            direction: in
            protocol: tcp
            port: 80
            source_ips:
              - "{{ lb_result.hcloud_load_balancer.ipv4_address }}/32"
          - description: allow ingress https from LB
            direction: in
            protocol: tcp
            port: 443
            source_ips:
              - "{{ lb_result.hcloud_load_balancer.ipv4_address }}/32"
          - description: allow machineconfig api from LB
            direction: in
            protocol: tcp
            port: 22623
            source_ips:
              - "{{ lb_result.hcloud_load_balancer.ipv4_address }}/32"
          - description: allow any cluster internal TCP
            direction: in
            protocol: tcp
            port: 1-65535
            source_ips:
              - "{{ hostvars[groups['role_controller'][0]]['hcloud_ipv4'] }}/32"
              - "{{ hostvars[groups['role_controller'][1]]['hcloud_ipv4'] }}/32"
              - "{{ hostvars[groups['role_controller'][2]]['hcloud_ipv4'] }}/32"
              - "{{ hostvars[groups['role_bastion'][0]]['hcloud_ipv4'] }}/32"
          - description: allow any cluster internal UDP
            direction: in
            protocol: udp
            port: 1-65535
            source_ips:
              - "{{ hostvars[groups['role_controller'][0]]['hcloud_ipv4'] }}/32"
              - "{{ hostvars[groups['role_controller'][1]]['hcloud_ipv4'] }}/32"
              - "{{ hostvars[groups['role_controller'][2]]['hcloud_ipv4'] }}/32"
              - "{{ hostvars[groups['role_bastion'][0]]['hcloud_ipv4'] }}/32"
        state: present

    - name: Apply a firewall to a list of servers
      hetzner.hcloud.firewall_resource:
        firewall: controller-firewall
        label_selectors:
          - role=controller
        state: present

    - name: Start servers
      hetzner.hcloud.server:
        name: "{{ item.name }}"
        state: started
      loop: "{{ controllers }}"

    - name: Refresh inventory to get access to servers
      meta: refresh_inventory

    - debug:
        msg:
          - "bastion at: {{ hostvars[groups['role_bastion'][0]]['hcloud_ipv4'] }}"
          - "LB {{ lb_result.hcloud_load_balancer.name }} at: {{ lb_result.hcloud_load_balancer.ipv4_address }}"
          - "ctrl-1 public at: {{ hostvars[groups['role_controller'][0]]['hcloud_ipv4'] }}"
          - "ctrl-2 public at: {{ hostvars[groups['role_controller'][1]]['hcloud_ipv4'] }}"
          - "ctrl-3 public at: {{ hostvars[groups['role_controller'][2]]['hcloud_ipv4'] }}"
